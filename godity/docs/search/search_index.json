{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Godity Engine Documentation Use the left menu to navigate.","title":"Home"},{"location":"#welcome-to-godity-engine-documentation","text":"Use the left menu to navigate.","title":"Welcome to Godity Engine Documentation"},{"location":"components/","text":"Components Transform __init__(|OPTIONAL| position : godity.math.Vector2 <None>, scale : godity.math.Vector2 <None>, rotation : int <0>) Variables position : godity.math.Vector2 scale : godity.math.Vector2 rotation : int Methods start() move(vector2 : godity.math.Vector2) rotate(angle : int) setPosition(vector2 : godity.math.Vector2) setPositionX(value : int) setPositionY(value : int) setRotation(angle : int) setScale(vector2 : godity.math.Vector2) setScaleX(value : int) setScaleY(value : int) updateChildrenPosition(|OPTIONAL| offset_x : int <0>, offset_y : int <0>) update() Sprite Renderer __init__(app : godity.core.App, image_name : str, |OPTIONAL| area : tuple <None>, tile_width : int <0>, tile_height : int <0>, offset_x : int <0>, offset_y : int <0>, flip_x : bool <False>, flip_y : bool <False>, smooth_scale : bool <True>) Variables image_name : str area : tuple tile_width : int tile_height : int offset_x : int offset_y : int flip_x : bool flip_y : bool smooth_scale : bool rect : pygame.Rect Methods start() updateRect() setArea(area : tuple) setFlip(x : bool, y : bool) setImage(image_path : str, |OPTIONAL| convert_alpha : bool <False>) getDrawImage() -> list[pygame.Surface, pygame.Rect] update() Box Collider __init__(width : int, height : int, |OPTIONAL| ghost : bool <False>, is_platform : bool <False>) Variables width : int height : int ghost : bool is_platform : bool collide_objects : list Methods start() checkCollision(axis : str) update() Rigidbody __init__(app : godity.core.App, |OPTIONAL| velocity : float <2>, mass : float <1>, use_gravity : bool <True>, drop_platform_key : int <pygame.K_DOWN>) Variables velocity : float mass : float use_gravity : bool gravity : float <0> direction : godity.math.Vector2 drop_platform_key : int on_ground : bool is_jumping : bool platform_drop : bool air_time : float Methods start() move() jump(force : float) update() Camera __init__(screen_width : int, screen_height : int, |OPTIONAL| offset_x : int <0>, offset_y : int <0>) Variables screen_width : int screen_height : int offset_x : int offset_y : int Methods start() apply(rect : pygame.Rect) update() Animation __init__(name : str, image_name : str, area_list : list, frame_delay: float) Variables image_name : str area_list : list frame_delay : float Methods start() run() pause() restart() getState() -> str getArea() -> tuple update() Tilemap __init__(file_path : str, |OPTIONAL| alpha_background : bool <False>) Variables tmx_data : pytmx.pytmx.TiledMap width : int height : int image : pygame.Surface() Methods start() getDrawImage() -> list[pygame.Surface, pygame.Rect] update()","title":"Components"},{"location":"components/#components","text":"","title":"Components"},{"location":"components/#transform","text":"__init__(|OPTIONAL| position : godity.math.Vector2 <None>, scale : godity.math.Vector2 <None>, rotation : int <0>)","title":"Transform"},{"location":"components/#variables","text":"position : godity.math.Vector2 scale : godity.math.Vector2 rotation : int","title":"Variables"},{"location":"components/#methods","text":"start() move(vector2 : godity.math.Vector2) rotate(angle : int) setPosition(vector2 : godity.math.Vector2) setPositionX(value : int) setPositionY(value : int) setRotation(angle : int) setScale(vector2 : godity.math.Vector2) setScaleX(value : int) setScaleY(value : int) updateChildrenPosition(|OPTIONAL| offset_x : int <0>, offset_y : int <0>) update()","title":"Methods"},{"location":"components/#sprite-renderer","text":"__init__(app : godity.core.App, image_name : str, |OPTIONAL| area : tuple <None>, tile_width : int <0>, tile_height : int <0>, offset_x : int <0>, offset_y : int <0>, flip_x : bool <False>, flip_y : bool <False>, smooth_scale : bool <True>)","title":"Sprite Renderer"},{"location":"components/#variables_1","text":"image_name : str area : tuple tile_width : int tile_height : int offset_x : int offset_y : int flip_x : bool flip_y : bool smooth_scale : bool rect : pygame.Rect","title":"Variables"},{"location":"components/#methods_1","text":"start() updateRect() setArea(area : tuple) setFlip(x : bool, y : bool) setImage(image_path : str, |OPTIONAL| convert_alpha : bool <False>) getDrawImage() -> list[pygame.Surface, pygame.Rect] update()","title":"Methods"},{"location":"components/#box-collider","text":"__init__(width : int, height : int, |OPTIONAL| ghost : bool <False>, is_platform : bool <False>)","title":"Box Collider"},{"location":"components/#variables_2","text":"width : int height : int ghost : bool is_platform : bool collide_objects : list","title":"Variables"},{"location":"components/#methods_2","text":"start() checkCollision(axis : str) update()","title":"Methods"},{"location":"components/#rigidbody","text":"__init__(app : godity.core.App, |OPTIONAL| velocity : float <2>, mass : float <1>, use_gravity : bool <True>, drop_platform_key : int <pygame.K_DOWN>)","title":"Rigidbody"},{"location":"components/#variables_3","text":"velocity : float mass : float use_gravity : bool gravity : float <0> direction : godity.math.Vector2 drop_platform_key : int on_ground : bool is_jumping : bool platform_drop : bool air_time : float","title":"Variables"},{"location":"components/#methods_3","text":"start() move() jump(force : float) update()","title":"Methods"},{"location":"components/#camera","text":"__init__(screen_width : int, screen_height : int, |OPTIONAL| offset_x : int <0>, offset_y : int <0>)","title":"Camera"},{"location":"components/#variables_4","text":"screen_width : int screen_height : int offset_x : int offset_y : int","title":"Variables"},{"location":"components/#methods_4","text":"start() apply(rect : pygame.Rect) update()","title":"Methods"},{"location":"components/#animation","text":"__init__(name : str, image_name : str, area_list : list, frame_delay: float)","title":"Animation"},{"location":"components/#variables_5","text":"image_name : str area_list : list frame_delay : float","title":"Variables"},{"location":"components/#methods_5","text":"start() run() pause() restart() getState() -> str getArea() -> tuple update()","title":"Methods"},{"location":"components/#tilemap","text":"__init__(file_path : str, |OPTIONAL| alpha_background : bool <False>)","title":"Tilemap"},{"location":"components/#variables_6","text":"tmx_data : pytmx.pytmx.TiledMap width : int height : int image : pygame.Surface()","title":"Variables"},{"location":"components/#methods_6","text":"start() getDrawImage() -> list[pygame.Surface, pygame.Rect] update()","title":"Methods"},{"location":"core/","text":"Core App __init__(width : int, height : int, title : str, |OPTIONAL| flags : int <0>, fps : float <60>, exit_key : int <pygame.K_ESCAPE>) Variables gravity : float <9.807> physics_color : tuple <(255,255,255)> exit_key : int window : godity.core.Window Methods # overwrite functions start() update() render() end() loadImage(name : str, path : str, |OPTIONAL| convert_alpha : bool <False>) loadAudio(name : str, path : str) updateImage(name : str, path : str, |OPTIONAL| convert_alpha : bool <False>) getImage(name : str) -> pygame.Surface getAudio(name : str) -> pygame.mixer.Sound getFlags() -> int deleteImage(name : str) deleteAudio(name : str) playAudio(name : str) stopAudio(name : str) getEvents() -> list[] of events getClock() -> pygame.time.Clock getDeltaTime() -> float getScene() -> godity.core.Scene setScene(scene : godity.core.Scene) setFPS(value : float) close() run() Component __init__(name : str, args : dict) Variables name : str args : dict entity : godity.core.Entity <None> Methods #overwrite methods start() update() Entity __init__(name : str) Variables name : str childrens : list scene : godity.core.Scene <None> Methods add(component : godity.core.Component) addTag(name : str) remove(component : str) removeTag(name : str) has(component : str) -> bool hasTag(name : str) -> bool get(component : str) -> godity.core.Component getChildrens() -> list[] of godity.core.Entity getScene() -> godity.core.Scene parent(entity : godity.core.Entity) end() update() Scene __init__(app : godity.core.App, name : str, surface_width : int, surface_height : int, |OPTIONAL| adjust_surface : bool <True>, render_physics : bool <False>) Variables name : str render_physics : bool background_color : tuple <(0,0,0)> Methods add(entity : godity.core.Entity) remove(entity : godity.core.Entity) get(entity : str) -> godity.core.Entity getEntities() -> list[] of godity.core.Entity getEntitiesWithComponent(component : str) -> list[] of godity.core.Entity getCamera() -> godity.core.Entity setCamera(entity : godity.core.Entity) # the entity must have a camera component. isRendering() -> bool isUpdating() -> bool render() update() Window __init__(width : int, height : int, title : str, |OPTIONAL| flags : int <0>) Variables width : int height : int title : str flags : int <0> Methods getDisplay() -> pygame.Surface clearColor(color : tuple) update() Timer __init__() Variables last_time : float Methods getTime() -> float resetTime()","title":"Core"},{"location":"core/#core","text":"","title":"Core"},{"location":"core/#app","text":"__init__(width : int, height : int, title : str, |OPTIONAL| flags : int <0>, fps : float <60>, exit_key : int <pygame.K_ESCAPE>)","title":"App"},{"location":"core/#variables","text":"gravity : float <9.807> physics_color : tuple <(255,255,255)> exit_key : int window : godity.core.Window","title":"Variables"},{"location":"core/#methods","text":"# overwrite functions start() update() render() end() loadImage(name : str, path : str, |OPTIONAL| convert_alpha : bool <False>) loadAudio(name : str, path : str) updateImage(name : str, path : str, |OPTIONAL| convert_alpha : bool <False>) getImage(name : str) -> pygame.Surface getAudio(name : str) -> pygame.mixer.Sound getFlags() -> int deleteImage(name : str) deleteAudio(name : str) playAudio(name : str) stopAudio(name : str) getEvents() -> list[] of events getClock() -> pygame.time.Clock getDeltaTime() -> float getScene() -> godity.core.Scene setScene(scene : godity.core.Scene) setFPS(value : float) close() run()","title":"Methods"},{"location":"core/#component","text":"__init__(name : str, args : dict)","title":"Component"},{"location":"core/#variables_1","text":"name : str args : dict entity : godity.core.Entity <None>","title":"Variables"},{"location":"core/#methods_1","text":"#overwrite methods start() update()","title":"Methods"},{"location":"core/#entity","text":"__init__(name : str)","title":"Entity"},{"location":"core/#variables_2","text":"name : str childrens : list scene : godity.core.Scene <None>","title":"Variables"},{"location":"core/#methods_2","text":"add(component : godity.core.Component) addTag(name : str) remove(component : str) removeTag(name : str) has(component : str) -> bool hasTag(name : str) -> bool get(component : str) -> godity.core.Component getChildrens() -> list[] of godity.core.Entity getScene() -> godity.core.Scene parent(entity : godity.core.Entity) end() update()","title":"Methods"},{"location":"core/#scene","text":"__init__(app : godity.core.App, name : str, surface_width : int, surface_height : int, |OPTIONAL| adjust_surface : bool <True>, render_physics : bool <False>)","title":"Scene"},{"location":"core/#variables_3","text":"name : str render_physics : bool background_color : tuple <(0,0,0)>","title":"Variables"},{"location":"core/#methods_3","text":"add(entity : godity.core.Entity) remove(entity : godity.core.Entity) get(entity : str) -> godity.core.Entity getEntities() -> list[] of godity.core.Entity getEntitiesWithComponent(component : str) -> list[] of godity.core.Entity getCamera() -> godity.core.Entity setCamera(entity : godity.core.Entity) # the entity must have a camera component. isRendering() -> bool isUpdating() -> bool render() update()","title":"Methods"},{"location":"core/#window","text":"__init__(width : int, height : int, title : str, |OPTIONAL| flags : int <0>)","title":"Window"},{"location":"core/#variables_4","text":"width : int height : int title : str flags : int <0>","title":"Variables"},{"location":"core/#methods_4","text":"getDisplay() -> pygame.Surface clearColor(color : tuple) update()","title":"Methods"},{"location":"core/#timer","text":"__init__()","title":"Timer"},{"location":"core/#variables_5","text":"last_time : float","title":"Variables"},{"location":"core/#methods_5","text":"getTime() -> float resetTime()","title":"Methods"},{"location":"general/","text":"General getMonitorSize() -> tuple()","title":"General"},{"location":"general/#general","text":"getMonitorSize() -> tuple()","title":"General"},{"location":"math/","text":"Math Vector2 __init__(|OPTIONAL| x : float <0>, y : float <0>) Variables x : float y : float Methods add(vector2 : godity.math.Vector2) -> godity.math.Vector2() subtract(vector2 : godity.math.Vector2) -> godity.math.Vector2() multiply(scalar : float) -> godity.math.Vector2() divide(scalar : float) -> godity.math.Vector2() length() -> float normalize() -> godity.math.Vector2() copy() -> godity.math.Vector2()","title":"Math"},{"location":"math/#math","text":"","title":"Math"},{"location":"math/#vector2","text":"__init__(|OPTIONAL| x : float <0>, y : float <0>)","title":"Vector2"},{"location":"math/#variables","text":"x : float y : float","title":"Variables"},{"location":"math/#methods","text":"add(vector2 : godity.math.Vector2) -> godity.math.Vector2() subtract(vector2 : godity.math.Vector2) -> godity.math.Vector2() multiply(scalar : float) -> godity.math.Vector2() divide(scalar : float) -> godity.math.Vector2() length() -> float normalize() -> godity.math.Vector2() copy() -> godity.math.Vector2()","title":"Methods"},{"location":"notes/","text":"Release 0.5 New dependence pytmx New general function. New parameters and attributes in BoxCollider Component. New function in Rigidbody Component and new attributes. New functions and parameters in App class. New function in Entity class. New parameters, attributes and functions in Sprite Renderer Component. Removed the \"surface\" parameter from the render function of the Scene class. Improvements in physics. It is now possible to choose the rendering color of physics, this option is in the App class, called \"physics_color\". The scene class has new parameters. New components: Animation Tilemap","title":"Release Notes"},{"location":"notes/#release-05","text":"New dependence pytmx New general function. New parameters and attributes in BoxCollider Component. New function in Rigidbody Component and new attributes. New functions and parameters in App class. New function in Entity class. New parameters, attributes and functions in Sprite Renderer Component. Removed the \"surface\" parameter from the render function of the Scene class. Improvements in physics. It is now possible to choose the rendering color of physics, this option is in the App class, called \"physics_color\". The scene class has new parameters. New components: Animation Tilemap","title":"Release 0.5"}]}